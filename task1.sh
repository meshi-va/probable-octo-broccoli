#!/bin/bash
# Usage ./task1.sh > foo.txt
# $1 stands for the first argument, so the script can be targeted at any directory. 
# If no argument is provided, the script will run on the current working directory.

echo "---User logins---"
# Filter for login/logout activity.
# The -a flag is used so grep treats the log files as text, instead of binary.
grep -a "UserSessionActor" $1Lucid.log

echo -e \\n\\n\\n
echo "---Local changes---"
# Shows the line that indicates a change to the local configuration and;
# the consecutive line(-A 1) to show what was changed exactly
grep -a -A 1 "ClientConfigManager |  New config stored" $1Lucid.log | grep -v "New config loaded"

echo -e \\n\\n\\n
echo "---Reset to default---"
# Shows the line where a setting was reset to default and;
# the two consecutive lines(-A 2) for settings that have 2 attributes,
# the grep command with the -v flag excludes the clutter generated by the lines that refer to settings 
# with single attributes
grep -a -A 2 "ClientConfigManager |  Config settings deleted" $1Lucid.log | grep -v "New config loaded"

echo -e \\n\\n\\n
echo "---Daemon exited with error---"
# Shows the line where the daemon exited with an error.
# the command prints the times when the daemon exited without explicit user action; 
# by filtering the lines with exit codes that are followed by a number which is greater than 0.
# Prints the error itself, by showing the preceding line(-B 1)
grep -a -B 1 "daemon exited with code [^0]" $1app.log
